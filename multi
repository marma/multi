#!/usr/bin/env python3


from sys import argv,exit,stdin,stdout,stderr
from multiprocessing import Pool
from time import sleep
from subprocess import run,STDOUT,PIPE
from io import StringIO,BytesIO
from tempfile import TemporaryFile

def work(value):
    with TemporaryFile() as tmp:
        tmp.write(value.encode('utf-8'))
        tmp.seek(0)
        p = run(argv[2:], stdin=tmp, stdout=PIPE, stderr=PIPE)
        p.check_returncode()

        return (p.stdout.decode('utf-8'), p.stderr.decode('utf-8'))


if __name__ == "__main__":
    if len(argv) < 3:
        print(f'usage: {argv[0]} n-processes cmd arg_1 arg_2 ... arg_n')
        exit(1)

    cmd=argv[2]
    cargv=argv[3:]

    with Pool(int(argv[1])) as pool:
        for p in pool.imap_unordered(work, stdin):
            print(p[0], file=stdout, end='', flush=True)
            print(p[1], file=stderr, end='', flush=True)

    
